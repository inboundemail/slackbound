---
description: Core design system tokens, colors, typography, and spacing conventions
---

# Design System

## Color System

### Color Space
- Use OKLCH color space for all color definitions
- Define colors in CSS custom properties for theme switching
- Maintain both light and dark mode variants

### Color Tokens
```css
/* Semantic color tokens */
--background, --foreground
--card, --card-foreground
--popover, --popover-foreground
--primary, --light-primary, --dark-primary, --primary-foreground
--secondary, --secondary-foreground
--muted, --muted-foreground
--accent, --accent-foreground
--destructive
--border, --input, --ring
--chart-1 through --chart-5
--sidebar-* (sidebar, sidebar-foreground, sidebar-primary, etc.)
```

### Usage
- Use semantic tokens, not direct color values
- Example: `bg-background text-foreground` not `bg-white text-black`
- Use Tailwind classes: `bg-primary`, `text-muted-foreground`, `border-border`

## Typography

### Font Families
```typescript
// Primary fonts
--font-geist-sans: Default body text
--font-geist-mono: Code and monospace content
--font-jetbrains-mono: Technical text, code snippets

// Display fonts
--font-instrument-serif: Headings and titles
--font-instrument-sans: Alternative body font
--font-urbanist: UI elements
--font-bricolage-grotesque: Display text
```

### Font Usage Patterns
```tsx
// Headings - use Instrument Serif
<h1 className="instrument-serif text-xl font-bold">Title</h1>

// Technical/code - use JetBrains Mono
<code className="jetbrains-mono text-[10px]">CODE: {error.code}</code>

// Body text - uses Geist Sans by default (no class needed)
<p>Regular paragraph text</p>

// Descriptions - muted foreground
<p className="text-muted-foreground text-xs">Description text</p>
```

### Type Scale
- text-[10px]: Technical labels, codes
- text-xs: Descriptions, helper text
- text-sm: Body text, form labels
- text-base: Standard content
- text-xl: Section headings
- text-7xl: Hero headings (marketing)

### Font Weights
- font-medium: Standard emphasis
- font-semibold: Form labels, important text
- font-bold: Headings, titles

## Spacing System

### Consistent Spacing
- gap-2: 0.5rem - Tight spacing (form fields, inline elements)
- gap-4: 1rem - Standard spacing (sections, cards)
- p-2, p-3, p-4: Padding for containers
- px-4: Horizontal padding for page content
- mb-4.5: Special spacing (e.g., aligning with form descriptions)

### Layout Classes
```css
/* Custom utility classes */
.dash-page: flex w-full flex-col
.dash-layout-page-content-height: h-[calc(100svh-50px)] md:h-[calc(100svh-48px-18px)]
.scroll-bar-hidden: scrollbar-width: none (with webkit variant)
.new-container: mx-auto max-w-[1000px] border-x border-dashed
```

## Border Styles

### Border Utilities
- `border`: Standard borders (use semantic --border color)
- `border-dashed`: Decorative or outline elements
- `divide-x`, `divide-y`: Element dividers
- `border-x border-dashed`: Container borders for new-container

### Border Usage
```tsx
// Decorative/ghost buttons
<Button className="border-dashed" variant="outline">Add Item</Button>

// Section dividers
<Accordion className="divide-y border-b">

// Container borders
<div className="new-container">
```

## Shadows and Effects

### Custom Shadows
```css
.button-highlighted-shadow {
  @apply shadow-[inset_0px_1.5px_0px_rgba(255,255,255,0.15)];
}
```

### Transitions
```css
/* Theme transitions */
body {
  transition: background-color var(--transition-duration) ease;
}
```

## Border Radius

### Radius System
```css
--radius: 0.6rem (base)
--radius-sm: calc(var(--radius) - 4px)
--radius-md: calc(var(--radius) - 2px)
--radius-lg: var(--radius)
--radius-xl: calc(var(--radius) + 4px)
```

### Usage
- Small elements: rounded-md
- Buttons: rounded (default)
- Cards: rounded-md or rounded-lg
- Images: rounded-md

## Selection Styling

```css
::selection {
  @apply bg-primary/80 text-primary-foreground;
}
```

## Best Practices

1. **Always use semantic color tokens**, never hardcoded colors
2. **Maintain dark mode support** for all components
3. **Use consistent spacing** from the spacing system
4. **Apply proper font families** based on content type
5. **Use OKLCH** for any custom color definitions
6. **Test both light and dark themes** during development
